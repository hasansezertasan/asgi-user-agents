[project]
name = "asgi-user-agents"
dynamic = ["version"]
description = "User Agent integration for ASGI applications."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["asgi", "starlette", "litestar", "fastapi", "quart", "user-agent"]
authors = [{ name = "Hasan Sezer Taşan", email = "hasansezertasan@gmail.com" }]
maintainers = [
  { name = "Hasan Sezer Taşan", email = "hasansezertasan@gmail.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Internet",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Operating System :: OS Independent",
  "Typing :: Typed",
  "Environment :: Web Environment",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Framework :: AsyncIO",
  "Framework :: FastAPI",
]
dependencies = ["user-agents"]


[project.urls]
Documentation = "https://github.com/hasansezertasan/asgi-user-agents#readme"
Issues = "https://github.com/hasansezertasan/asgi-user-agents/issues"
Source = "https://github.com/hasansezertasan/asgi-user-agents"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.version]
path = "src/asgi_user_agents/__about__.py"


[tool.uv]
cache-keys = [
  { file = "pyproject.toml" },
  { git = { commit = true, tags = true } },
]
trusted-publishing = "always"


[tool.hatch.envs.default]
installer = "uv"
extra-dependencies = [
  "starlette>=0.16.0",
  "uvicorn>=0.36.0,<0.37.0",
  "pre-commit>=3.0.0,<4.0.0",
]


[tool.hatch.envs.default.scripts]
start = "uvicorn examples.starlette:app --reload"
pre = "pre-commit run --all-files --hook-stage manual --show-diff-on-failure"


[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0", "ruff==0.12.11", "codespell==2.4.1"]


[[tool.hatch.envs.types.matrix]]
python = ["3.8", "3.13"]


[tool.hatch.envs.types.scripts]
typing = "mypy --install-types --non-interactive {args:src/asgi_user_agents tests}"
style = ["ruff check {args:.}"]
format = ["ruff format {args:.}"]
spelling = "codespell ."
all = ["spelling", "typing", "style", "format"]


[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "pytest>=6.0.0",
  "pytest-asyncio>=0.14.0",
  "parametrize_from_file==0.20.0",
  "httpx>=0.28.1,<0.29.0",
  "starlette>=0.16.0",
  "fastapi>=0.116.1,<0.117.0",
  "litestar>=2.0.0,<3.0.0",
  "quart>=0.10.0,<0.20.0",
]


[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]


[tool.codespell]
ignore-words-list = "CrOS"


[tool.ruff]
fix = true
preview = true
show-fixes = true
src = ["src", "tests"]
target-version = "py38"
unsafe-fixes = true

# [tool.ruff.analyze]
# detect-string-imports = true
# preview = true


[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
preview = true


[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "ANN401",
  "COM",
  "S",
  "UP",
  "CPY",
  "PLC0414",
  "PLR6201",
  "RUF029",
  "D203",
  "D213",
]
preview = true


[tool.ruff.lint.isort]
known-first-party = ["asgi_user_agents"]


[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ['S101']


[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.ruff.lint.pydocstyle]
convention = "google"


# [tool.ruff.lint.ruff]
# parenthesize-tuple-in-subscript = true


[tool.ruff.lint.mccabe]
max-complexity = 5


[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true


[tool.coverage.run]
source_pkgs = ["asgi_user_agents", "tests"]
branch = true
parallel = true
omit = ["src/asgi_user_agents/__about__.py"]


[tool.coverage.paths]
asgi_user_agents = [
  "src/asgi_user_agents",
  "*/asgi-user-agents/src/asgi_user_agents",
]
tests = ["tests", "*/asgi-user-agents/tests"]


[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
